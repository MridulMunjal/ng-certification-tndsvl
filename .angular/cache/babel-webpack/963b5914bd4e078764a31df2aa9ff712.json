{"ast":null,"code":"import _get from \"C:\\\\Users\\\\MM\\\\Downloads\\\\ng-certification-tndsvl\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\get.js\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\MM\\\\Downloads\\\\ng-certification-tndsvl\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\nimport _createClass from \"C:\\\\Users\\\\MM\\\\Downloads\\\\ng-certification-tndsvl\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\MM\\\\Downloads\\\\ng-certification-tndsvl\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _inherits from \"C:\\\\Users\\\\MM\\\\Downloads\\\\ng-certification-tndsvl\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\Users\\\\MM\\\\Downloads\\\\ng-certification-tndsvl\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\n\n/**\n * @license Angular v13.1.1\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, ɵglobal, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵINJECTOR_SCOPE, NgZone, RendererFactory2, Testability, ApplicationModule, NgModule, Optional, SkipSelf, ɵɵinject, ApplicationRef, ɵConsole, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵgetSanitizationBypassType, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, Version } from '@angular/core';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\nvar GenericBrowserDomAdapter = /*#__PURE__*/function (_ɵDomAdapter) {\n  _inherits(GenericBrowserDomAdapter, _ɵDomAdapter);\n\n  var _super = _createSuper(GenericBrowserDomAdapter);\n\n  function GenericBrowserDomAdapter() {\n    var _this;\n\n    _classCallCheck(this, GenericBrowserDomAdapter);\n\n    _this = _super.apply(this, arguments);\n    _this.supportsDOMEvents = true;\n    return _this;\n  }\n\n  return _createClass(GenericBrowserDomAdapter);\n}(ɵDomAdapter);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\n/* tslint:disable:requireParameterType no-console */\n\n\nvar BrowserDomAdapter = /*#__PURE__*/function (_GenericBrowserDomAda) {\n  _inherits(BrowserDomAdapter, _GenericBrowserDomAda);\n\n  var _super2 = _createSuper(BrowserDomAdapter);\n\n  function BrowserDomAdapter() {\n    _classCallCheck(this, BrowserDomAdapter);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(BrowserDomAdapter, [{\n    key: \"onAndCancel\",\n    value: function onAndCancel(el, evt, listener) {\n      el.addEventListener(evt, listener, false); // Needed to follow Dart's subscription semantic, until fix of\n      // https://code.google.com/p/dart/issues/detail?id=17406\n\n      return function () {\n        el.removeEventListener(evt, listener, false);\n      };\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(el, evt) {\n      el.dispatchEvent(evt);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(node) {\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(tagName, doc) {\n      doc = doc || this.getDefaultDocument();\n      return doc.createElement(tagName);\n    }\n  }, {\n    key: \"createHtmlDocument\",\n    value: function createHtmlDocument() {\n      return document.implementation.createHTMLDocument('fakeTitle');\n    }\n  }, {\n    key: \"getDefaultDocument\",\n    value: function getDefaultDocument() {\n      return document;\n    }\n  }, {\n    key: \"isElementNode\",\n    value: function isElementNode(node) {\n      return node.nodeType === Node.ELEMENT_NODE;\n    }\n  }, {\n    key: \"isShadowRoot\",\n    value: function isShadowRoot(node) {\n      return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n\n  }, {\n    key: \"getGlobalEventTarget\",\n    value: function getGlobalEventTarget(doc, target) {\n      if (target === 'window') {\n        return window;\n      }\n\n      if (target === 'document') {\n        return doc;\n      }\n\n      if (target === 'body') {\n        return doc.body;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getBaseHref\",\n    value: function getBaseHref(doc) {\n      var href = getBaseElementHref();\n      return href == null ? null : relativePath(href);\n    }\n  }, {\n    key: \"resetBaseElement\",\n    value: function resetBaseElement() {\n      baseElement = null;\n    }\n  }, {\n    key: \"getUserAgent\",\n    value: function getUserAgent() {\n      return window.navigator.userAgent;\n    }\n  }, {\n    key: \"getCookie\",\n    value: function getCookie(name) {\n      return ɵparseCookieValue(document.cookie, name);\n    }\n  }], [{\n    key: \"makeCurrent\",\n    value: function makeCurrent() {\n      ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n  }]);\n\n  return BrowserDomAdapter;\n}(GenericBrowserDomAdapter);\n\nvar baseElement = null;\n\nfunction getBaseElementHref() {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n} // based on urlUtils.js in AngularJS 1\n\n\nvar urlParsingNode;\n\nfunction relativePath(url) {\n  urlParsingNode = urlParsingNode || document.createElement('a');\n  urlParsingNode.setAttribute('href', url);\n  var pathName = urlParsingNode.pathname;\n  return pathName.charAt(0) === '/' ? pathName : \"/\".concat(pathName);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\n\n\nvar TRANSITION_ID = /*#__PURE__*/new InjectionToken('TRANSITION_ID');\n\nfunction appInitializerFactory(transitionId, document, injector) {\n  return function () {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(function () {\n      var dom = ɵgetDOM();\n      var styles = document.querySelectorAll(\"style[ng-transition=\\\"\".concat(transitionId, \"\\\"]\"));\n\n      for (var i = 0; i < styles.length; i++) {\n        dom.remove(styles[i]);\n      }\n    });\n  };\n}\n\nvar SERVER_TRANSITION_PROVIDERS = [{\n  provide: APP_INITIALIZER,\n  useFactory: appInitializerFactory,\n  deps: [TRANSITION_ID, DOCUMENT, Injector],\n  multi: true\n}];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar BrowserGetTestability = /*#__PURE__*/function () {\n  function BrowserGetTestability() {\n    _classCallCheck(this, BrowserGetTestability);\n  }\n\n  _createClass(BrowserGetTestability, [{\n    key: \"addToWindow\",\n    value: function addToWindow(registry) {\n      ɵglobal['getAngularTestability'] = function (elem) {\n        var findInAncestors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var testability = registry.findTestabilityInTree(elem, findInAncestors);\n\n        if (testability == null) {\n          throw new Error('Could not find testability for element.');\n        }\n\n        return testability;\n      };\n\n      ɵglobal['getAllAngularTestabilities'] = function () {\n        return registry.getAllTestabilities();\n      };\n\n      ɵglobal['getAllAngularRootElements'] = function () {\n        return registry.getAllRootElements();\n      };\n\n      var whenAllStable = function whenAllStable(callback\n      /** TODO #9100 */\n      ) {\n        var testabilities = ɵglobal['getAllAngularTestabilities']();\n        var count = testabilities.length;\n        var didWork = false;\n\n        var decrement = function decrement(didWork_\n        /** TODO #9100 */\n        ) {\n          didWork = didWork || didWork_;\n          count--;\n\n          if (count == 0) {\n            callback(didWork);\n          }\n        };\n\n        testabilities.forEach(function (testability\n        /** TODO #9100 */\n        ) {\n          testability.whenStable(decrement);\n        });\n      };\n\n      if (!ɵglobal['frameworkStabilizers']) {\n        ɵglobal['frameworkStabilizers'] = [];\n      }\n\n      ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n  }, {\n    key: \"findTestabilityInTree\",\n    value: function findTestabilityInTree(registry, elem, findInAncestors) {\n      if (elem == null) {\n        return null;\n      }\n\n      var t = registry.getTestability(elem);\n\n      if (t != null) {\n        return t;\n      } else if (!findInAncestors) {\n        return null;\n      }\n\n      if (ɵgetDOM().isShadowRoot(elem)) {\n        return this.findTestabilityInTree(registry, elem.host, true);\n      }\n\n      return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n  }], [{\n    key: \"init\",\n    value: function init() {\n      setTestabilityGetter(new BrowserGetTestability());\n    }\n  }]);\n\n  return BrowserGetTestability;\n}();\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\n\n\nvar BrowserXhr = /*#__PURE__*/(function () {\n  var BrowserXhr = /*#__PURE__*/function () {\n    function BrowserXhr() {\n      _classCallCheck(this, BrowserXhr);\n    }\n\n    _createClass(BrowserXhr, [{\n      key: \"build\",\n      value: function build() {\n        return new XMLHttpRequest();\n      }\n    }]);\n\n    return BrowserXhr;\n  }();\n\n  BrowserXhr.ɵfac = function BrowserXhr_Factory(t) {\n    return new (t || BrowserXhr)();\n  };\n\n  BrowserXhr.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BrowserXhr,\n    factory: BrowserXhr.ɵfac\n  });\n  return BrowserXhr;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\n\n\nvar EVENT_MANAGER_PLUGINS = /*#__PURE__*/new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n\nvar EventManager = /*#__PURE__*/(function () {\n  var EventManager = /*#__PURE__*/function () {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    function EventManager(plugins, _zone) {\n      var _this2 = this;\n\n      _classCallCheck(this, EventManager);\n\n      this._zone = _zone;\n      this._eventNameToPlugin = new Map();\n      plugins.forEach(function (p) {\n        return p.manager = _this2;\n      });\n      this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n\n\n    _createClass(EventManager, [{\n      key: \"addEventListener\",\n      value: function addEventListener(element, eventName, handler) {\n        var plugin = this._findPluginFor(eventName);\n\n        return plugin.addEventListener(element, eventName, handler);\n      }\n      /**\n       * Registers a global handler for an event in a target view.\n       *\n       * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n       * @param eventName The name of the event to listen for.\n       * @param handler A function to call when the notification occurs. Receives the\n       * event object as an argument.\n       * @returns A callback function that can be used to remove the handler.\n       * @deprecated No longer being used in Ivy code. To be removed in version 14.\n       */\n\n    }, {\n      key: \"addGlobalEventListener\",\n      value: function addGlobalEventListener(target, eventName, handler) {\n        var plugin = this._findPluginFor(eventName);\n\n        return plugin.addGlobalEventListener(target, eventName, handler);\n      }\n      /**\n       * Retrieves the compilation zone in which event listeners are registered.\n       */\n\n    }, {\n      key: \"getZone\",\n      value: function getZone() {\n        return this._zone;\n      }\n      /** @internal */\n\n    }, {\n      key: \"_findPluginFor\",\n      value: function _findPluginFor(eventName) {\n        var plugin = this._eventNameToPlugin.get(eventName);\n\n        if (plugin) {\n          return plugin;\n        }\n\n        var plugins = this._plugins;\n\n        for (var i = 0; i < plugins.length; i++) {\n          var _plugin = plugins[i];\n\n          if (_plugin.supports(eventName)) {\n            this._eventNameToPlugin.set(eventName, _plugin);\n\n            return _plugin;\n          }\n        }\n\n        throw new Error(\"No event manager plugin found for event \".concat(eventName));\n      }\n    }]);\n\n    return EventManager;\n  }();\n\n  EventManager.ɵfac = function EventManager_Factory(t) {\n    return new (t || EventManager)(i0.ɵɵinject(EVENT_MANAGER_PLUGINS), i0.ɵɵinject(i0.NgZone));\n  };\n\n  EventManager.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: EventManager,\n    factory: EventManager.ɵfac\n  });\n  return EventManager;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar EventManagerPlugin = /*#__PURE__*/function () {\n  function EventManagerPlugin(_doc) {\n    _classCallCheck(this, EventManagerPlugin);\n\n    this._doc = _doc;\n  }\n\n  _createClass(EventManagerPlugin, [{\n    key: \"addGlobalEventListener\",\n    value: function addGlobalEventListener(element, eventName, handler) {\n      var target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n\n      if (!target) {\n        throw new Error(\"Unsupported event target \".concat(target, \" for event \").concat(eventName));\n      }\n\n      return this.addEventListener(target, eventName, handler);\n    }\n  }]);\n\n  return EventManagerPlugin;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar SharedStylesHost = /*#__PURE__*/(function () {\n  var SharedStylesHost = /*#__PURE__*/function () {\n    function SharedStylesHost() {\n      _classCallCheck(this, SharedStylesHost);\n\n      /** @internal */\n      this._stylesSet = new Set();\n    }\n\n    _createClass(SharedStylesHost, [{\n      key: \"addStyles\",\n      value: function addStyles(styles) {\n        var _this3 = this;\n\n        var additions = new Set();\n        styles.forEach(function (style) {\n          if (!_this3._stylesSet.has(style)) {\n            _this3._stylesSet.add(style);\n\n            additions.add(style);\n          }\n        });\n        this.onStylesAdded(additions);\n      }\n    }, {\n      key: \"onStylesAdded\",\n      value: function onStylesAdded(additions) {}\n    }, {\n      key: \"getAllStyles\",\n      value: function getAllStyles() {\n        return Array.from(this._stylesSet);\n      }\n    }]);\n\n    return SharedStylesHost;\n  }();\n\n  SharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) {\n    return new (t || SharedStylesHost)();\n  };\n\n  SharedStylesHost.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SharedStylesHost,\n    factory: SharedStylesHost.ɵfac\n  });\n  return SharedStylesHost;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar DomSharedStylesHost = /*#__PURE__*/(function () {\n  var DomSharedStylesHost = /*#__PURE__*/function (_SharedStylesHost) {\n    _inherits(DomSharedStylesHost, _SharedStylesHost);\n\n    var _super3 = _createSuper(DomSharedStylesHost);\n\n    function DomSharedStylesHost(_doc) {\n      var _this4;\n\n      _classCallCheck(this, DomSharedStylesHost);\n\n      _this4 = _super3.call(this);\n      _this4._doc = _doc; // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n\n      _this4._hostNodes = new Map();\n\n      _this4._hostNodes.set(_doc.head, []);\n\n      return _this4;\n    }\n\n    _createClass(DomSharedStylesHost, [{\n      key: \"_addStylesToHost\",\n      value: function _addStylesToHost(styles, host, styleNodes) {\n        var _this5 = this;\n\n        styles.forEach(function (style) {\n          var styleEl = _this5._doc.createElement('style');\n\n          styleEl.textContent = style;\n          styleNodes.push(host.appendChild(styleEl));\n        });\n      }\n    }, {\n      key: \"addHost\",\n      value: function addHost(hostNode) {\n        var styleNodes = [];\n\n        this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n\n        this._hostNodes.set(hostNode, styleNodes);\n      }\n    }, {\n      key: \"removeHost\",\n      value: function removeHost(hostNode) {\n        var styleNodes = this._hostNodes.get(hostNode);\n\n        if (styleNodes) {\n          styleNodes.forEach(removeStyle);\n        }\n\n        this._hostNodes.delete(hostNode);\n      }\n    }, {\n      key: \"onStylesAdded\",\n      value: function onStylesAdded(additions) {\n        var _this6 = this;\n\n        this._hostNodes.forEach(function (styleNodes, hostNode) {\n          _this6._addStylesToHost(additions, hostNode, styleNodes);\n        });\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._hostNodes.forEach(function (styleNodes) {\n          return styleNodes.forEach(removeStyle);\n        });\n      }\n    }]);\n\n    return DomSharedStylesHost;\n  }(SharedStylesHost);\n\n  DomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) {\n    return new (t || DomSharedStylesHost)(i0.ɵɵinject(DOCUMENT));\n  };\n\n  DomSharedStylesHost.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DomSharedStylesHost,\n    factory: DomSharedStylesHost.ɵfac\n  });\n  return DomSharedStylesHost;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction removeStyle(styleNode) {\n  ɵgetDOM().remove(styleNode);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/'\n};\nvar COMPONENT_REGEX = /%COMP%/g;\nvar NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = /*#__PURE__*/\"_nghost-\".concat(COMPONENT_VARIABLE);\nvar CONTENT_ATTR = /*#__PURE__*/\"_ngcontent-\".concat(COMPONENT_VARIABLE);\n\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction flattenStyles(compId, styles, target) {\n  for (var i = 0; i < styles.length; i++) {\n    var style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n\n  return target;\n}\n\nfunction decoratePreventDefault(eventHandler) {\n  // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n  // the listener (see below).\n  return function (event) {\n    // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n    // can inspect the listener toString contents for the existence of this special token. Because\n    // the token is a string literal, it is ensured to not be modified by compiled code.\n    if (event === '__ngUnwrap__') {\n      return eventHandler;\n    }\n\n    var allowDefaultBehavior = eventHandler(event);\n\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n\n    return undefined;\n  };\n}\n\nvar hasLoggedNativeEncapsulationWarning = false;\nvar DomRendererFactory2 = /*#__PURE__*/(function () {\n  var DomRendererFactory2 = /*#__PURE__*/function () {\n    function DomRendererFactory2(eventManager, sharedStylesHost, appId) {\n      _classCallCheck(this, DomRendererFactory2);\n\n      this.eventManager = eventManager;\n      this.sharedStylesHost = sharedStylesHost;\n      this.appId = appId;\n      this.rendererByCompId = new Map();\n      this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n\n    _createClass(DomRendererFactory2, [{\n      key: \"createRenderer\",\n      value: function createRenderer(element, type) {\n        if (!element || !type) {\n          return this.defaultRenderer;\n        }\n\n        switch (type.encapsulation) {\n          case ViewEncapsulation.Emulated:\n            {\n              var renderer = this.rendererByCompId.get(type.id);\n\n              if (!renderer) {\n                renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n                this.rendererByCompId.set(type.id, renderer);\n              }\n\n              renderer.applyToHost(element);\n              return renderer;\n            }\n          // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n          // value that is not known (but previously was the value for ViewEncapsulation.Native)\n\n          case 1:\n          case ViewEncapsulation.ShadowDom:\n            // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n            // enum value that is not known (but previously was the value for\n            // ViewEncapsulation.Native)\n            !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n              hasLoggedNativeEncapsulationWarning = true;\n              console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n            }\n\n            return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n\n          default:\n            {\n              if (!this.rendererByCompId.has(type.id)) {\n                var styles = flattenStyles(type.id, type.styles, []);\n                this.sharedStylesHost.addStyles(styles);\n                this.rendererByCompId.set(type.id, this.defaultRenderer);\n              }\n\n              return this.defaultRenderer;\n            }\n        }\n      }\n    }, {\n      key: \"begin\",\n      value: function begin() {}\n    }, {\n      key: \"end\",\n      value: function end() {}\n    }]);\n\n    return DomRendererFactory2;\n  }();\n\n  DomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) {\n    return new (t || DomRendererFactory2)(i0.ɵɵinject(EventManager), i0.ɵɵinject(DomSharedStylesHost), i0.ɵɵinject(APP_ID));\n  };\n\n  DomRendererFactory2.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DomRendererFactory2,\n    factory: DomRendererFactory2.ɵfac\n  });\n  return DomRendererFactory2;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar DefaultDomRenderer2 = /*#__PURE__*/function () {\n  function DefaultDomRenderer2(eventManager) {\n    _classCallCheck(this, DefaultDomRenderer2);\n\n    this.eventManager = eventManager;\n    this.data = Object.create(null);\n    this.destroyNode = null;\n  }\n\n  _createClass(DefaultDomRenderer2, [{\n    key: \"destroy\",\n    value: function destroy() {}\n  }, {\n    key: \"createElement\",\n    value: function createElement(name, namespace) {\n      if (namespace) {\n        // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n        // will result in undefined, so we just return the namespace here.\n        return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n      }\n\n      return document.createElement(name);\n    }\n  }, {\n    key: \"createComment\",\n    value: function createComment(value) {\n      return document.createComment(value);\n    }\n  }, {\n    key: \"createText\",\n    value: function createText(value) {\n      return document.createTextNode(value);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      parent.appendChild(newChild);\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      if (parent) {\n        parent.insertBefore(newChild, refChild);\n      }\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      if (parent) {\n        parent.removeChild(oldChild);\n      }\n    }\n  }, {\n    key: \"selectRootElement\",\n    value: function selectRootElement(selectorOrNode, preserveContent) {\n      var el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) : selectorOrNode;\n\n      if (!el) {\n        throw new Error(\"The selector \\\"\".concat(selectorOrNode, \"\\\" did not match any elements\"));\n      }\n\n      if (!preserveContent) {\n        el.textContent = '';\n      }\n\n      return el;\n    }\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return node.parentNode;\n    }\n  }, {\n    key: \"nextSibling\",\n    value: function nextSibling(node) {\n      return node.nextSibling;\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(el, name, value, namespace) {\n      if (namespace) {\n        name = namespace + ':' + name; // TODO(FW-811): Ivy may cause issues here because it's passing around\n        // full URIs for namespaces, therefore this lookup will fail.\n\n        var namespaceUri = NAMESPACE_URIS[namespace];\n\n        if (namespaceUri) {\n          el.setAttributeNS(namespaceUri, name, value);\n        } else {\n          el.setAttribute(name, value);\n        }\n      } else {\n        el.setAttribute(name, value);\n      }\n    }\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(el, name, namespace) {\n      if (namespace) {\n        // TODO(FW-811): Ivy may cause issues here because it's passing around\n        // full URIs for namespaces, therefore this lookup will fail.\n        var namespaceUri = NAMESPACE_URIS[namespace];\n\n        if (namespaceUri) {\n          el.removeAttributeNS(namespaceUri, name);\n        } else {\n          // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n          // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n          // which is wrong.\n          el.removeAttribute(\"\".concat(namespace, \":\").concat(name));\n        }\n      } else {\n        el.removeAttribute(name);\n      }\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(el, name) {\n      el.classList.add(name);\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(el, name) {\n      el.classList.remove(name);\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(el, style, value, flags) {\n      if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n        el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n      } else {\n        el.style[style] = value;\n      }\n    }\n  }, {\n    key: \"removeStyle\",\n    value: function removeStyle(el, style, flags) {\n      if (flags & RendererStyleFlags2.DashCase) {\n        el.style.removeProperty(style);\n      } else {\n        // IE requires '' instead of null\n        // see https://github.com/angular/angular/issues/7916\n        el.style[style] = '';\n      }\n    }\n  }, {\n    key: \"setProperty\",\n    value: function setProperty(el, name, value) {\n      NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n      el[name] = value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(node, value) {\n      node.nodeValue = value;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(target, event, callback) {\n      NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n\n      if (typeof target === 'string') {\n        return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n      }\n\n      return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n  }]);\n\n  return DefaultDomRenderer2;\n}();\n\nvar AT_CHARCODE = /*#__PURE__*/function () {\n  return '@'.charCodeAt(0);\n}();\n\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(\"Unexpected synthetic \".concat(nameKind, \" \").concat(name, \" found. Please make sure that:\\n  - Either `BrowserAnimationsModule` or `NoopAnimationsModule` are imported in your application.\\n  - There is corresponding configuration for the animation named `\").concat(name, \"` defined in the `animations` field of the `@Component` decorator (see https://angular.io/api/core/Component#animations).\"));\n  }\n}\n\nvar EmulatedEncapsulationDomRenderer2 = /*#__PURE__*/function (_DefaultDomRenderer) {\n  _inherits(EmulatedEncapsulationDomRenderer2, _DefaultDomRenderer);\n\n  var _super4 = _createSuper(EmulatedEncapsulationDomRenderer2);\n\n  function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component, appId) {\n    var _this7;\n\n    _classCallCheck(this, EmulatedEncapsulationDomRenderer2);\n\n    _this7 = _super4.call(this, eventManager);\n    _this7.component = component;\n    var styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n    _this7.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    _this7.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    return _this7;\n  }\n\n  _createClass(EmulatedEncapsulationDomRenderer2, [{\n    key: \"applyToHost\",\n    value: function applyToHost(element) {\n      _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"setAttribute\", this).call(this, element, this.hostAttr, '');\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(parent, name) {\n      var el = _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"createElement\", this).call(this, parent, name);\n\n      _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"setAttribute\", this).call(this, el, this.contentAttr, '');\n\n      return el;\n    }\n  }]);\n\n  return EmulatedEncapsulationDomRenderer2;\n}(DefaultDomRenderer2);\n\nvar ShadowDomRenderer = /*#__PURE__*/function (_DefaultDomRenderer2) {\n  _inherits(ShadowDomRenderer, _DefaultDomRenderer2);\n\n  var _super5 = _createSuper(ShadowDomRenderer);\n\n  function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {\n    var _this8;\n\n    _classCallCheck(this, ShadowDomRenderer);\n\n    _this8 = _super5.call(this, eventManager);\n    _this8.sharedStylesHost = sharedStylesHost;\n    _this8.hostEl = hostEl;\n    _this8.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n\n    _this8.sharedStylesHost.addHost(_this8.shadowRoot);\n\n    var styles = flattenStyles(component.id, component.styles, []);\n\n    for (var i = 0; i < styles.length; i++) {\n      var styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n\n      _this8.shadowRoot.appendChild(styleEl);\n    }\n\n    return _this8;\n  }\n\n  _createClass(ShadowDomRenderer, [{\n    key: \"nodeOrShadowRoot\",\n    value: function nodeOrShadowRoot(node) {\n      return node === this.hostEl ? this.shadowRoot : node;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"appendChild\", this).call(this, this.nodeOrShadowRoot(parent), newChild);\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"insertBefore\", this).call(this, this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"removeChild\", this).call(this, this.nodeOrShadowRoot(parent), oldChild);\n    }\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return this.nodeOrShadowRoot(_get(_getPrototypeOf(ShadowDomRenderer.prototype), \"parentNode\", this).call(this, this.nodeOrShadowRoot(node)));\n    }\n  }]);\n\n  return ShadowDomRenderer;\n}(DefaultDomRenderer2);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar DomEventsPlugin = /*#__PURE__*/(function () {\n  var DomEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin) {\n    _inherits(DomEventsPlugin, _EventManagerPlugin);\n\n    var _super6 = _createSuper(DomEventsPlugin);\n\n    function DomEventsPlugin(doc) {\n      _classCallCheck(this, DomEventsPlugin);\n\n      return _super6.call(this, doc);\n    } // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n\n\n    _createClass(DomEventsPlugin, [{\n      key: \"supports\",\n      value: function supports(eventName) {\n        return true;\n      }\n    }, {\n      key: \"addEventListener\",\n      value: function addEventListener(element, eventName, handler) {\n        var _this9 = this;\n\n        element.addEventListener(eventName, handler, false);\n        return function () {\n          return _this9.removeEventListener(element, eventName, handler);\n        };\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n      }\n    }]);\n\n    return DomEventsPlugin;\n  }(EventManagerPlugin);\n\n  DomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) {\n    return new (t || DomEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n  };\n\n  DomEventsPlugin.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DomEventsPlugin,\n    factory: DomEventsPlugin.ɵfac\n  });\n  return DomEventsPlugin;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Defines supported modifiers for key events.\n */\n\n\nvar MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nvar DOM_KEY_LOCATION_NUMPAD = 3; // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\n\nvar _keyMap = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf https://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n}; // There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\n\nvar _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\n\nvar MODIFIER_KEY_GETTERS = {\n  'alt': function alt(event) {\n    return event.altKey;\n  },\n  'control': function control(event) {\n    return event.ctrlKey;\n  },\n  'meta': function meta(event) {\n    return event.metaKey;\n  },\n  'shift': function shift(event) {\n    return event.shiftKey;\n  }\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n\nvar KeyEventsPlugin = /*#__PURE__*/(function () {\n  var KeyEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin2) {\n    _inherits(KeyEventsPlugin, _EventManagerPlugin2);\n\n    var _super7 = _createSuper(KeyEventsPlugin);\n\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    function KeyEventsPlugin(doc) {\n      _classCallCheck(this, KeyEventsPlugin);\n\n      return _super7.call(this, doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n\n\n    _createClass(KeyEventsPlugin, [{\n      key: \"supports\",\n      value: function supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n      }\n      /**\n       * Registers a handler for a specific element and key event.\n       * @param element The HTML element to receive event notifications.\n       * @param eventName The name of the key event to listen for.\n       * @param handler A function to call when the notification occurs. Receives the\n       * event object as an argument.\n       * @returns The key event that was registered.\n       */\n\n    }, {\n      key: \"addEventListener\",\n      value: function addEventListener(element, eventName, handler) {\n        var parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        var outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(function () {\n          return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n      }\n    }], [{\n      key: \"parseEventName\",\n      value: function parseEventName(eventName) {\n        var parts = eventName.toLowerCase().split('.');\n        var domEventName = parts.shift();\n\n        if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n          return null;\n        }\n\n        var key = KeyEventsPlugin._normalizeKey(parts.pop());\n\n        var fullKey = '';\n        MODIFIER_KEYS.forEach(function (modifierName) {\n          var index = parts.indexOf(modifierName);\n\n          if (index > -1) {\n            parts.splice(index, 1);\n            fullKey += modifierName + '.';\n          }\n        });\n        fullKey += key;\n\n        if (parts.length != 0 || key.length === 0) {\n          // returning null instead of throwing to let another plugin process the event\n          return null;\n        } // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n\n\n        var result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n      }\n    }, {\n      key: \"getEventFullKey\",\n      value: function getEventFullKey(event) {\n        var fullKey = '';\n        var key = getEventKey(event);\n        key = key.toLowerCase();\n\n        if (key === ' ') {\n          key = 'space'; // for readability\n        } else if (key === '.') {\n          key = 'dot'; // because '.' is used as a separator in event names\n        }\n\n        MODIFIER_KEYS.forEach(function (modifierName) {\n          if (modifierName != key) {\n            var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n\n            if (modifierGetter(event)) {\n              fullKey += modifierName + '.';\n            }\n          }\n        });\n        fullKey += key;\n        return fullKey;\n      }\n      /**\n       * Configures a handler callback for a key event.\n       * @param fullKey The event name that combines all simultaneous keystrokes.\n       * @param handler The function that responds to the key event.\n       * @param zone The zone in which the event occurred.\n       * @returns A callback function.\n       */\n\n    }, {\n      key: \"eventCallback\",\n      value: function eventCallback(fullKey, handler, zone) {\n        return function (event\n        /** TODO #9100 */\n        ) {\n          if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n            zone.runGuarded(function () {\n              return handler(event);\n            });\n          }\n        };\n      }\n      /** @internal */\n\n    }, {\n      key: \"_normalizeKey\",\n      value: function _normalizeKey(keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n          case 'esc':\n            return 'escape';\n\n          default:\n            return keyName;\n        }\n      }\n    }]);\n\n    return KeyEventsPlugin;\n  }(EventManagerPlugin);\n\n  KeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) {\n    return new (t || KeyEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n  };\n\n  KeyEventsPlugin.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: KeyEventsPlugin,\n    factory: KeyEventsPlugin.ɵfac\n  });\n  return KeyEventsPlugin;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction getEventKey(event) {\n  var key = event.key;\n\n  if (key == null) {\n    key = event.keyIdentifier; // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n    // Safari cf\n    // https://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n\n    if (key == null) {\n      return 'Unidentified';\n    }\n\n    if (key.startsWith('U+')) {\n      key = String.fromCharCode(parseInt(key.substring(2), 16));\n\n      if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n        // There is a bug in Chrome for numeric keypad keys:\n        // https://code.google.com/p/chromium/issues/detail?id=155654\n        // 1, 2, 3 ... are reported as A, B, C ...\n        key = _chromeNumKeyPadMap[key];\n      }\n    }\n  }\n\n  return _keyMap[key] || key;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n\nfunction errorHandler() {\n  return new ErrorHandler();\n}\n\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\n\nvar INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵPLATFORM_BROWSER_ID\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\n\nvar platformBrowser = /*#__PURE__*/createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nvar BROWSER_MODULE_PROVIDERS = [{\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, {\n  provide: DomRendererFactory2,\n  useClass: DomRendererFactory2,\n  deps: [EventManager, DomSharedStylesHost, APP_ID]\n}, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: SharedStylesHost,\n  useExisting: DomSharedStylesHost\n}, {\n  provide: DomSharedStylesHost,\n  useClass: DomSharedStylesHost,\n  deps: [DOCUMENT]\n}, {\n  provide: Testability,\n  useClass: Testability,\n  deps: [NgZone]\n}, {\n  provide: EventManager,\n  useClass: EventManager,\n  deps: [EVENT_MANAGER_PLUGINS, NgZone]\n}, {\n  provide: XhrFactory,\n  useClass: BrowserXhr,\n  deps: []\n}];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n\nvar BrowserModule = /*#__PURE__*/(function () {\n  var BrowserModule = /*#__PURE__*/function () {\n    function BrowserModule(parentModule) {\n      _classCallCheck(this, BrowserModule);\n\n      if (parentModule) {\n        throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n      }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n\n\n    _createClass(BrowserModule, null, [{\n      key: \"withServerTransition\",\n      value: function withServerTransition(params) {\n        return {\n          ngModule: BrowserModule,\n          providers: [{\n            provide: APP_ID,\n            useValue: params.appId\n          }, {\n            provide: TRANSITION_ID,\n            useExisting: APP_ID\n          }, SERVER_TRANSITION_PROVIDERS]\n        };\n      }\n    }]);\n\n    return BrowserModule;\n  }();\n\n  BrowserModule.ɵfac = function BrowserModule_Factory(t) {\n    return new (t || BrowserModule)(i0.ɵɵinject(BrowserModule, 12));\n  };\n\n  BrowserModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BrowserModule\n  });\n  BrowserModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: BROWSER_MODULE_PROVIDERS,\n    imports: [CommonModule, ApplicationModule]\n  });\n  return BrowserModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\n\n\nfunction createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\n\n\nvar Meta = /*#__PURE__*/(function () {\n  var Meta = /*#__PURE__*/function () {\n    function Meta(_doc) {\n      _classCallCheck(this, Meta);\n\n      this._doc = _doc;\n      this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n\n\n    _createClass(Meta, [{\n      key: \"addTag\",\n      value: function addTag(tag) {\n        var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        if (!tag) return null;\n        return this._getOrCreateElement(tag, forceCreation);\n      }\n      /**\n       * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n       * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n       * values in the provided tag definition, and verifies that all other attribute values are equal.\n       * @param tags An array of tag definitions to match or create.\n       * @param forceCreation True to create new elements without checking whether they already exist.\n       * @returns The matching elements if found, or the new elements.\n       */\n\n    }, {\n      key: \"addTags\",\n      value: function addTags(tags) {\n        var _this10 = this;\n\n        var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        if (!tags) return [];\n        return tags.reduce(function (result, tag) {\n          if (tag) {\n            result.push(_this10._getOrCreateElement(tag, forceCreation));\n          }\n\n          return result;\n        }, []);\n      }\n      /**\n       * Retrieves a `<meta>` tag element in the current HTML document.\n       * @param attrSelector The tag attribute and value to match against, in the format\n       * `\"tag_attribute='value string'\"`.\n       * @returns The matching element, if any.\n       */\n\n    }, {\n      key: \"getTag\",\n      value: function getTag(attrSelector) {\n        if (!attrSelector) return null;\n        return this._doc.querySelector(\"meta[\".concat(attrSelector, \"]\")) || null;\n      }\n      /**\n       * Retrieves a set of `<meta>` tag elements in the current HTML document.\n       * @param attrSelector The tag attribute and value to match against, in the format\n       * `\"tag_attribute='value string'\"`.\n       * @returns The matching elements, if any.\n       */\n\n    }, {\n      key: \"getTags\",\n      value: function getTags(attrSelector) {\n        if (!attrSelector) return [];\n\n        var list\n        /*NodeList*/\n        = this._doc.querySelectorAll(\"meta[\".concat(attrSelector, \"]\"));\n\n        return list ? [].slice.call(list) : [];\n      }\n      /**\n       * Modifies an existing `<meta>` tag element in the current HTML document.\n       * @param tag The tag description with which to replace the existing tag content.\n       * @param selector A tag attribute and value to match against, to identify\n       * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n       * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n       * replacement tag.\n       * @return The modified element.\n       */\n\n    }, {\n      key: \"updateTag\",\n      value: function updateTag(tag, selector) {\n        if (!tag) return null;\n        selector = selector || this._parseSelector(tag);\n        var meta = this.getTag(selector);\n\n        if (meta) {\n          return this._setMetaElementAttributes(tag, meta);\n        }\n\n        return this._getOrCreateElement(tag, true);\n      }\n      /**\n       * Removes an existing `<meta>` tag element from the current HTML document.\n       * @param attrSelector A tag attribute and value to match against, to identify\n       * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n       */\n\n    }, {\n      key: \"removeTag\",\n      value: function removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n      }\n      /**\n       * Removes an existing `<meta>` tag element from the current HTML document.\n       * @param meta The tag definition to match against to identify an existing tag.\n       */\n\n    }, {\n      key: \"removeTagElement\",\n      value: function removeTagElement(meta) {\n        if (meta) {\n          this._dom.remove(meta);\n        }\n      }\n    }, {\n      key: \"_getOrCreateElement\",\n      value: function _getOrCreateElement(meta) {\n        var _this11 = this;\n\n        var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (!forceCreation) {\n          var selector = this._parseSelector(meta); // It's allowed to have multiple elements with the same name so it's not enough to\n          // just check that element with the same name already present on the page. We also need to\n          // check if element has tag attributes\n\n\n          var elem = this.getTags(selector).filter(function (elem) {\n            return _this11._containsAttributes(meta, elem);\n          })[0];\n          if (elem !== undefined) return elem;\n        }\n\n        var element = this._dom.createElement('meta');\n\n        this._setMetaElementAttributes(meta, element);\n\n        var head = this._doc.getElementsByTagName('head')[0];\n\n        head.appendChild(element);\n        return element;\n      }\n    }, {\n      key: \"_setMetaElementAttributes\",\n      value: function _setMetaElementAttributes(tag, el) {\n        var _this12 = this;\n\n        Object.keys(tag).forEach(function (prop) {\n          return el.setAttribute(_this12._getMetaKeyMap(prop), tag[prop]);\n        });\n        return el;\n      }\n    }, {\n      key: \"_parseSelector\",\n      value: function _parseSelector(tag) {\n        var attr = tag.name ? 'name' : 'property';\n        return \"\".concat(attr, \"=\\\"\").concat(tag[attr], \"\\\"\");\n      }\n    }, {\n      key: \"_containsAttributes\",\n      value: function _containsAttributes(tag, elem) {\n        var _this13 = this;\n\n        return Object.keys(tag).every(function (key) {\n          return elem.getAttribute(_this13._getMetaKeyMap(key)) === tag[key];\n        });\n      }\n    }, {\n      key: \"_getMetaKeyMap\",\n      value: function _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n      }\n    }]);\n\n    return Meta;\n  }();\n\n  Meta.ɵfac = function Meta_Factory(t) {\n    return new (t || Meta)(i0.ɵɵinject(DOCUMENT));\n  };\n\n  Meta.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Meta,\n    factory: function Meta_Factory(t) {\n      var r = null;\n\n      if (t) {\n        r = new t();\n      } else {\n        r = createMeta();\n      }\n\n      return r;\n    },\n    providedIn: 'root'\n  });\n  return Meta;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\n\n\nvar META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Factory to create Title service.\n */\n\nfunction createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\n\n\nvar Title = /*#__PURE__*/(function () {\n  var Title = /*#__PURE__*/function () {\n    function Title(_doc) {\n      _classCallCheck(this, Title);\n\n      this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n\n\n    _createClass(Title, [{\n      key: \"getTitle\",\n      value: function getTitle() {\n        return this._doc.title;\n      }\n      /**\n       * Set the title of the current HTML document.\n       * @param newTitle\n       */\n\n    }, {\n      key: \"setTitle\",\n      value: function setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n      }\n    }]);\n\n    return Title;\n  }();\n\n  Title.ɵfac = function Title_Factory(t) {\n    return new (t || Title)(i0.ɵɵinject(DOCUMENT));\n  };\n\n  Title.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Title,\n    factory: function Title_Factory(t) {\n      var r = null;\n\n      if (t) {\n        r = new t();\n      } else {\n        r = createTitle();\n      }\n\n      return r;\n    },\n    providedIn: 'root'\n  });\n  return Title;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nvar DASH_CASE_REGEXP = /-([a-z])/g;\n\nfunction camelCaseToDashCase(input) {\n  return input.replace(CAMEL_CASE_REGEXP, function () {\n    for (var _len = arguments.length, m = new Array(_len), _key = 0; _key < _len; _key++) {\n      m[_key] = arguments[_key];\n    }\n\n    return '-' + m[1].toLowerCase();\n  });\n}\n\nfunction dashCaseToCamelCase(input) {\n  return input.replace(DASH_CASE_REGEXP, function () {\n    for (var _len2 = arguments.length, m = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      m[_key2] = arguments[_key2];\n    }\n\n    return m[1].toUpperCase();\n  });\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\n\n\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    var ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar win = typeof window !== 'undefined' && window || {};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ChangeDetectionPerfRecord = /*#__PURE__*/_createClass(function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n  _classCallCheck(this, ChangeDetectionPerfRecord);\n\n  this.msPerTick = msPerTick;\n  this.numTicks = numTicks;\n});\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\n\n\nvar AngularProfiler = /*#__PURE__*/function () {\n  function AngularProfiler(ref) {\n    _classCallCheck(this, AngularProfiler);\n\n    this.appRef = ref.injector.get(ApplicationRef);\n  } // tslint:disable:no-console\n\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n\n\n  _createClass(AngularProfiler, [{\n    key: \"timeChangeDetection\",\n    value: function timeChangeDetection(config) {\n      var record = config && config['record'];\n      var profileName = 'Change Detection'; // Profiler is not available in Android browsers without dev tools opened\n\n      var isProfilerAvailable = win.console.profile != null;\n\n      if (record && isProfilerAvailable) {\n        win.console.profile(profileName);\n      }\n\n      var start = performanceNow();\n      var numTicks = 0;\n\n      while (numTicks < 5 || performanceNow() - start < 500) {\n        this.appRef.tick();\n        numTicks++;\n      }\n\n      var end = performanceNow();\n\n      if (record && isProfilerAvailable) {\n        win.console.profileEnd(profileName);\n      }\n\n      var msPerTick = (end - start) / numTicks;\n      win.console.log(\"ran \".concat(numTicks, \" change detection cycles\"));\n      win.console.log(\"\".concat(msPerTick.toFixed(2), \" ms per check\"));\n      return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n  }]);\n\n  return AngularProfiler;\n}();\n\nfunction performanceNow() {\n  return win.performance && win.performance.now ? win.performance.now() : new Date().getTime();\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\n\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\n\n\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction escapeHtml(text) {\n  var escapedText = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;'\n  };\n  return text.replace(/[&\"'<>]/g, function (s) {\n    return escapedText[s];\n  });\n}\n\nfunction unescapeHtml(text) {\n  var unescapedText = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>'\n  };\n  return text.replace(/&[^;]+;/g, function (s) {\n    return unescapedText[s];\n  });\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\n\n\nfunction makeStateKey(key) {\n  return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\n\n\nvar TransferState = /*#__PURE__*/(function () {\n  var TransferState = /*#__PURE__*/function () {\n    function TransferState() {\n      _classCallCheck(this, TransferState);\n\n      this.store = {};\n      this.onSerializeCallbacks = {};\n    }\n    /** @internal */\n\n\n    _createClass(TransferState, [{\n      key: \"get\",\n      value:\n      /**\n       * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n       */\n      function get(key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n      }\n      /**\n       * Set the value corresponding to a key.\n       */\n\n    }, {\n      key: \"set\",\n      value: function set(key, value) {\n        this.store[key] = value;\n      }\n      /**\n       * Remove a key from the store.\n       */\n\n    }, {\n      key: \"remove\",\n      value: function remove(key) {\n        delete this.store[key];\n      }\n      /**\n       * Test whether a key exists in the store.\n       */\n\n    }, {\n      key: \"hasKey\",\n      value: function hasKey(key) {\n        return this.store.hasOwnProperty(key);\n      }\n      /**\n       * Register a callback to provide the value for a key when `toJson` is called.\n       */\n\n    }, {\n      key: \"onSerialize\",\n      value: function onSerialize(key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n      }\n      /**\n       * Serialize the current state of the store to JSON.\n       */\n\n    }, {\n      key: \"toJson\",\n      value: function toJson() {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (var key in this.onSerializeCallbacks) {\n          if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n            try {\n              this.store[key] = this.onSerializeCallbacks[key]();\n            } catch (e) {\n              console.warn('Exception in onSerialize callback: ', e);\n            }\n          }\n        }\n\n        return JSON.stringify(this.store);\n      }\n    }], [{\n      key: \"init\",\n      value: function init(initState) {\n        var transferState = new TransferState();\n        transferState.store = initState;\n        return transferState;\n      }\n    }]);\n\n    return TransferState;\n  }();\n\n  TransferState.ɵfac = function TransferState_Factory(t) {\n    return new (t || TransferState)();\n  };\n\n  TransferState.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TransferState,\n    factory: TransferState.ɵfac\n  });\n  return TransferState;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction initTransferState(doc, appId) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  var script = doc.getElementById(appId + '-state');\n  var initialState = {};\n\n  if (script && script.textContent) {\n    try {\n      // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n\n  return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\n\n\nvar BrowserTransferStateModule = /*#__PURE__*/(function () {\n  var BrowserTransferStateModule = /*#__PURE__*/_createClass(function BrowserTransferStateModule() {\n    _classCallCheck(this, BrowserTransferStateModule);\n  });\n\n  BrowserTransferStateModule.ɵfac = function BrowserTransferStateModule_Factory(t) {\n    return new (t || BrowserTransferStateModule)();\n  };\n\n  BrowserTransferStateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BrowserTransferStateModule\n  });\n  BrowserTransferStateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [{\n      provide: TransferState,\n      useFactory: initTransferState,\n      deps: [DOCUMENT, APP_ID]\n    }]\n  });\n  return BrowserTransferStateModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\n\n\nvar By = /*#__PURE__*/function () {\n  function By() {\n    _classCallCheck(this, By);\n  }\n\n  _createClass(By, null, [{\n    key: \"all\",\n    value:\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    function all() {\n      return function () {\n        return true;\n      };\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n\n  }, {\n    key: \"css\",\n    value: function css(selector) {\n      return function (debugElement) {\n        return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n      };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n\n  }, {\n    key: \"directive\",\n    value: function directive(type) {\n      return function (debugNode) {\n        return debugNode.providerTokens.indexOf(type) !== -1;\n      };\n    }\n  }]);\n\n  return By;\n}();\n\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n\n  return false;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Supported HammerJS recognizer event names.\n */\n\n\nvar EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\n\nvar HAMMER_GESTURE_CONFIG = /*#__PURE__*/new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\n\nvar HAMMER_LOADER = /*#__PURE__*/new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n\nvar HammerGestureConfig = /*#__PURE__*/(function () {\n  var HammerGestureConfig = /*#__PURE__*/function () {\n    function HammerGestureConfig() {\n      _classCallCheck(this, HammerGestureConfig);\n\n      /**\n       * A set of supported event names for gestures to be used in Angular.\n       * Angular supports all built-in recognizers, as listed in\n       * [HammerJS documentation](https://hammerjs.github.io/).\n       */\n      this.events = [];\n      /**\n       * Maps gesture event names to a set of configuration options\n       * that specify overrides to the default values for specific properties.\n       *\n       * The key is a supported event name to be configured,\n       * and the options object contains a set of properties, with override values\n       * to be applied to the named recognizer event.\n       * For example, to disable recognition of the rotate event, specify\n       *  `{\"rotate\": {\"enable\": false}}`.\n       *\n       * Properties that are not present take the HammerJS default values.\n       * For information about which properties are supported for which events,\n       * and their allowed and default values, see\n       * [HammerJS documentation](https://hammerjs.github.io/).\n       *\n       */\n\n      this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n\n\n    _createClass(HammerGestureConfig, [{\n      key: \"buildHammer\",\n      value: function buildHammer(element) {\n        var mc = new Hammer(element, this.options);\n        mc.get('pinch').set({\n          enable: true\n        });\n        mc.get('rotate').set({\n          enable: true\n        });\n\n        for (var eventName in this.overrides) {\n          mc.get(eventName).set(this.overrides[eventName]);\n        }\n\n        return mc;\n      }\n    }]);\n\n    return HammerGestureConfig;\n  }();\n\n  HammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) {\n    return new (t || HammerGestureConfig)();\n  };\n\n  HammerGestureConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: HammerGestureConfig,\n    factory: HammerGestureConfig.ɵfac\n  });\n  return HammerGestureConfig;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\n\n\nvar HammerGesturesPlugin = /*#__PURE__*/(function () {\n  var HammerGesturesPlugin = /*#__PURE__*/function (_EventManagerPlugin3) {\n    _inherits(HammerGesturesPlugin, _EventManagerPlugin3);\n\n    var _super8 = _createSuper(HammerGesturesPlugin);\n\n    function HammerGesturesPlugin(doc, _config, console, loader) {\n      var _this14;\n\n      _classCallCheck(this, HammerGesturesPlugin);\n\n      _this14 = _super8.call(this, doc);\n      _this14._config = _config;\n      _this14.console = console;\n      _this14.loader = loader;\n      _this14._loaderPromise = null;\n      return _this14;\n    }\n\n    _createClass(HammerGesturesPlugin, [{\n      key: \"supports\",\n      value: function supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n          return false;\n        }\n\n        if (!window.Hammer && !this.loader) {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            this.console.warn(\"The \\\"\".concat(eventName, \"\\\" event cannot be bound because Hammer.JS is not \") + \"loaded and no custom loader has been specified.\");\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"addEventListener\",\n      value: function addEventListener(element, eventName, handler) {\n        var _this15 = this;\n\n        var zone = this.manager.getZone();\n        eventName = eventName.toLowerCase(); // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n\n        if (!window.Hammer && this.loader) {\n          this._loaderPromise = this._loaderPromise || this.loader(); // This `addEventListener` method returns a function to remove the added listener.\n          // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n          // than remove anything.\n\n          var cancelRegistration = false;\n\n          var deregister = function deregister() {\n            cancelRegistration = true;\n          };\n\n          this._loaderPromise.then(function () {\n            // If Hammer isn't actually loaded when the custom loader resolves, give up.\n            if (!window.Hammer) {\n              if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _this15.console.warn(\"The custom HAMMER_LOADER completed, but Hammer.JS is not present.\");\n              }\n\n              deregister = function deregister() {};\n\n              return;\n            }\n\n            if (!cancelRegistration) {\n              // Now that Hammer is loaded and the listener is being loaded for real,\n              // the deregistration function changes from canceling registration to removal.\n              deregister = _this15.addEventListener(element, eventName, handler);\n            }\n          }).catch(function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n              _this15.console.warn(\"The \\\"\".concat(eventName, \"\\\" event cannot be bound because the custom \") + \"Hammer.JS loader failed.\");\n            }\n\n            deregister = function deregister() {};\n          }); // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n          // can change the behavior of `deregister` once the listener is added. Using a closure in\n          // this way allows us to avoid any additional data structures to track listener removal.\n\n\n          return function () {\n            deregister();\n          };\n        }\n\n        return zone.runOutsideAngular(function () {\n          // Creating the manager bind events, must be done outside of angular\n          var mc = _this15._config.buildHammer(element);\n\n          var callback = function callback(eventObj) {\n            zone.runGuarded(function () {\n              handler(eventObj);\n            });\n          };\n\n          mc.on(eventName, callback);\n          return function () {\n            mc.off(eventName, callback); // destroy mc to prevent memory leak\n\n            if (typeof mc.destroy === 'function') {\n              mc.destroy();\n            }\n          };\n        });\n      }\n    }, {\n      key: \"isCustomEvent\",\n      value: function isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n      }\n    }]);\n\n    return HammerGesturesPlugin;\n  }(EventManagerPlugin);\n\n  HammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) {\n    return new (t || HammerGesturesPlugin)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(HAMMER_GESTURE_CONFIG), i0.ɵɵinject(i0.ɵConsole), i0.ɵɵinject(HAMMER_LOADER, 8));\n  };\n\n  HammerGesturesPlugin.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: HammerGesturesPlugin,\n    factory: HammerGesturesPlugin.ɵfac\n  });\n  return HammerGesturesPlugin;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\n\n\nvar HammerModule = /*#__PURE__*/(function () {\n  var HammerModule = /*#__PURE__*/_createClass(function HammerModule() {\n    _classCallCheck(this, HammerModule);\n  });\n\n  HammerModule.ɵfac = function HammerModule_Factory(t) {\n    return new (t || HammerModule)();\n  };\n\n  HammerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: HammerModule\n  });\n  HammerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [{\n      provide: EVENT_MANAGER_PLUGINS,\n      useClass: HammerGesturesPlugin,\n      multi: true,\n      deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n    }, {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: HammerGestureConfig,\n      deps: []\n    }]\n  });\n  return HammerModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\n\n\nvar DomSanitizer = /*#__PURE__*/(function () {\n  var DomSanitizer = /*#__PURE__*/_createClass(function DomSanitizer() {\n    _classCallCheck(this, DomSanitizer);\n  });\n\n  DomSanitizer.ɵfac = function DomSanitizer_Factory(t) {\n    return new (t || DomSanitizer)();\n  };\n\n  DomSanitizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DomSanitizer,\n    factory: function DomSanitizer_Factory(t) {\n      var r = null;\n\n      if (t) {\n        r = new (t || DomSanitizer)();\n      } else {\n        r = i0.ɵɵinject(DomSanitizerImpl);\n      }\n\n      return r;\n    },\n    providedIn: 'root'\n  });\n  return DomSanitizer;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction domSanitizerImplFactory(injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\n\nvar DomSanitizerImpl = /*#__PURE__*/(function () {\n  var DomSanitizerImpl = /*#__PURE__*/function (_DomSanitizer) {\n    _inherits(DomSanitizerImpl, _DomSanitizer);\n\n    var _super9 = _createSuper(DomSanitizerImpl);\n\n    function DomSanitizerImpl(_doc) {\n      var _this16;\n\n      _classCallCheck(this, DomSanitizerImpl);\n\n      _this16 = _super9.call(this);\n      _this16._doc = _doc;\n      return _this16;\n    }\n\n    _createClass(DomSanitizerImpl, [{\n      key: \"sanitize\",\n      value: function sanitize(ctx, value) {\n        if (value == null) return null;\n\n        switch (ctx) {\n          case SecurityContext.NONE:\n            return value;\n\n          case SecurityContext.HTML:\n            if (ɵallowSanitizationBypassAndThrow(value, \"HTML\"\n            /* Html */\n            )) {\n              return ɵunwrapSafeValue(value);\n            }\n\n            return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n\n          case SecurityContext.STYLE:\n            if (ɵallowSanitizationBypassAndThrow(value, \"Style\"\n            /* Style */\n            )) {\n              return ɵunwrapSafeValue(value);\n            }\n\n            return value;\n\n          case SecurityContext.SCRIPT:\n            if (ɵallowSanitizationBypassAndThrow(value, \"Script\"\n            /* Script */\n            )) {\n              return ɵunwrapSafeValue(value);\n            }\n\n            throw new Error('unsafe value used in a script context');\n\n          case SecurityContext.URL:\n            var type = ɵgetSanitizationBypassType(value);\n\n            if (ɵallowSanitizationBypassAndThrow(value, \"URL\"\n            /* Url */\n            )) {\n              return ɵunwrapSafeValue(value);\n            }\n\n            return ɵ_sanitizeUrl(String(value));\n\n          case SecurityContext.RESOURCE_URL:\n            if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\"\n            /* ResourceUrl */\n            )) {\n              return ɵunwrapSafeValue(value);\n            }\n\n            throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n\n          default:\n            throw new Error(\"Unexpected SecurityContext \".concat(ctx, \" (see https://g.co/ng/security#xss)\"));\n        }\n      }\n    }, {\n      key: \"bypassSecurityTrustHtml\",\n      value: function bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n      }\n    }, {\n      key: \"bypassSecurityTrustStyle\",\n      value: function bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n      }\n    }, {\n      key: \"bypassSecurityTrustScript\",\n      value: function bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n      }\n    }, {\n      key: \"bypassSecurityTrustUrl\",\n      value: function bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n      }\n    }, {\n      key: \"bypassSecurityTrustResourceUrl\",\n      value: function bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n      }\n    }]);\n\n    return DomSanitizerImpl;\n  }(DomSanitizer);\n\n  DomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) {\n    return new (t || DomSanitizerImpl)(i0.ɵɵinject(DOCUMENT));\n  };\n\n  DomSanitizerImpl.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DomSanitizerImpl,\n    factory: function DomSanitizerImpl_Factory(t) {\n      var r = null;\n\n      if (t) {\n        r = new t();\n      } else {\n        r = domSanitizerImplFactory(i0.ɵɵinject(Injector));\n      }\n\n      return r;\n    },\n    providedIn: 'root'\n  });\n  return DomSanitizerImpl;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nvar VERSION = /*#__PURE__*/new Version('13.1.1');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };","map":{"version":3,"sources":["C:/Users/MM/Downloads/ng-certification-tndsvl/node_modules/@angular/platform-browser/fesm2015/platform-browser.mjs"],"names":["ɵDomAdapter","ɵsetRootDomAdapter","ɵparseCookieValue","ɵgetDOM","DOCUMENT","ɵPLATFORM_BROWSER_ID","XhrFactory","CommonModule","i0","InjectionToken","ApplicationInitStatus","APP_INITIALIZER","Injector","setTestabilityGetter","ɵglobal","Injectable","Inject","ViewEncapsulation","APP_ID","RendererStyleFlags2","ErrorHandler","ɵsetDocument","PLATFORM_ID","PLATFORM_INITIALIZER","createPlatformFactory","platformCore","ɵINJECTOR_SCOPE","NgZone","RendererFactory2","Testability","ApplicationModule","NgModule","Optional","SkipSelf","ɵɵinject","ApplicationRef","ɵConsole","forwardRef","SecurityContext","ɵallowSanitizationBypassAndThrow","ɵunwrapSafeValue","ɵgetSanitizationBypassType","ɵ_sanitizeUrl","ɵ_sanitizeHtml","ɵbypassSanitizationTrustHtml","ɵbypassSanitizationTrustStyle","ɵbypassSanitizationTrustScript","ɵbypassSanitizationTrustUrl","ɵbypassSanitizationTrustResourceUrl","Version","GenericBrowserDomAdapter","arguments","supportsDOMEvents","BrowserDomAdapter","el","evt","listener","addEventListener","removeEventListener","dispatchEvent","node","parentNode","removeChild","tagName","doc","getDefaultDocument","createElement","document","implementation","createHTMLDocument","nodeType","Node","ELEMENT_NODE","DocumentFragment","target","window","body","href","getBaseElementHref","relativePath","baseElement","navigator","userAgent","name","cookie","querySelector","getAttribute","urlParsingNode","url","setAttribute","pathName","pathname","charAt","TRANSITION_ID","appInitializerFactory","transitionId","injector","get","donePromise","then","dom","styles","querySelectorAll","i","length","remove","SERVER_TRANSITION_PROVIDERS","provide","useFactory","deps","multi","BrowserGetTestability","registry","elem","findInAncestors","testability","findTestabilityInTree","Error","getAllTestabilities","getAllRootElements","whenAllStable","callback","testabilities","count","didWork","decrement","didWork_","forEach","whenStable","push","t","getTestability","isShadowRoot","host","parentElement","BrowserXhr","XMLHttpRequest","ɵfac","ɵprov","EVENT_MANAGER_PLUGINS","EventManager","plugins","_zone","_eventNameToPlugin","Map","p","manager","_plugins","slice","reverse","element","eventName","handler","plugin","_findPluginFor","addGlobalEventListener","supports","set","EventManagerPlugin","_doc","getGlobalEventTarget","SharedStylesHost","_stylesSet","Set","additions","style","has","add","onStylesAdded","Array","from","DomSharedStylesHost","_hostNodes","head","styleNodes","styleEl","textContent","appendChild","hostNode","_addStylesToHost","removeStyle","delete","styleNode","NAMESPACE_URIS","COMPONENT_REGEX","NG_DEV_MODE","ngDevMode","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","shimContentAttribute","componentShortId","replace","shimHostAttribute","flattenStyles","compId","isArray","decoratePreventDefault","eventHandler","event","allowDefaultBehavior","preventDefault","returnValue","undefined","hasLoggedNativeEncapsulationWarning","DomRendererFactory2","eventManager","sharedStylesHost","appId","rendererByCompId","defaultRenderer","DefaultDomRenderer2","type","encapsulation","Emulated","renderer","id","EmulatedEncapsulationDomRenderer2","applyToHost","ShadowDom","console","warn","ShadowDomRenderer","addStyles","data","Object","create","destroyNode","namespace","createElementNS","value","createComment","createTextNode","parent","newChild","refChild","insertBefore","oldChild","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttributeNS","removeAttribute","classList","flags","DashCase","Important","setProperty","removeProperty","checkNoSyntheticProp","nodeValue","AT_CHARCODE","charCodeAt","nameKind","component","contentAttr","hostAttr","hostEl","shadowRoot","attachShadow","mode","addHost","removeHost","nodeOrShadowRoot","DomEventsPlugin","MODIFIER_KEYS","DOM_KEY_LOCATION_NUMPAD","_keyMap","_chromeNumKeyPadMap","MODIFIER_KEY_GETTERS","altKey","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","getZone","runOutsideAngular","onAndCancel","parts","toLowerCase","split","domEventName","shift","key","_normalizeKey","pop","fullKey","modifierName","index","indexOf","splice","result","getEventKey","modifierGetter","zone","getEventFullKey","runGuarded","keyName","keyIdentifier","startsWith","String","fromCharCode","parseInt","substring","location","hasOwnProperty","initDomAdapter","makeCurrent","init","errorHandler","_document","INTERNAL_BROWSER_PLATFORM_PROVIDERS","useValue","platformBrowser","BROWSER_MODULE_PROVIDERS","useClass","useExisting","BrowserModule","parentModule","params","ngModule","providers","ɵmod","ɵinj","createMeta","Meta","_dom","tag","forceCreation","_getOrCreateElement","tags","reduce","attrSelector","list","call","selector","_parseSelector","meta","getTag","_setMetaElementAttributes","removeTagElement","getTags","filter","_containsAttributes","getElementsByTagName","keys","prop","_getMetaKeyMap","attr","every","META_KEYS_MAP","httpEquiv","createTitle","Title","title","newTitle","CAMEL_CASE_REGEXP","DASH_CASE_REGEXP","camelCaseToDashCase","input","m","dashCaseToCamelCase","toUpperCase","exportNgVar","COMPILED","ng","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","ref","appRef","config","record","profileName","isProfilerAvailable","profile","start","performanceNow","tick","end","profileEnd","log","toFixed","performance","now","Date","getTime","PROFILER_GLOBAL_NAME","enableDebugTools","disableDebugTools","escapeHtml","text","escapedText","s","unescapeHtml","unescapedText","makeStateKey","TransferState","store","onSerializeCallbacks","defaultValue","e","JSON","stringify","initState","transferState","initTransferState","script","getElementById","initialState","parse","BrowserTransferStateModule","By","debugElement","nativeElement","elementMatches","debugNode","providerTokens","n","isElementNode","matches","msMatchesSelector","webkitMatchesSelector","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","mc","Hammer","options","enable","HammerGesturesPlugin","_config","loader","_loaderPromise","isCustomEvent","cancelRegistration","deregister","catch","buildHammer","eventObj","on","off","destroy","HammerModule","DomSanitizer","DomSanitizerImpl","domSanitizerImplFactory","ctx","NONE","HTML","toString","STYLE","SCRIPT","URL","RESOURCE_URL","VERSION","ɵBrowserDomAdapter","ɵBrowserGetTestability","ɵDomEventsPlugin","ɵDomRendererFactory2","ɵDomSanitizerImpl","ɵDomSharedStylesHost","ɵHammerGesturesPlugin","ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS","ɵKeyEventsPlugin","ɵNAMESPACE_URIS","ɵSharedStylesHost","ɵTRANSITION_ID","ɵescapeHtml","ɵflattenStyles","ɵinitDomAdapter","ɵshimContentAttribute","ɵshimHostAttribute"],"mappings":"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","sourcesContent":["/**\n * @license Angular v13.1.1\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, ɵglobal, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵINJECTOR_SCOPE, NgZone, RendererFactory2, Testability, ApplicationModule, NgModule, Optional, SkipSelf, ɵɵinject, ApplicationRef, ɵConsole, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵgetSanitizationBypassType, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n    constructor() {\n        super(...arguments);\n        this.supportsDOMEvents = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return () => {\n            el.removeEventListener(evt, listener, false);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return ɵparseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\nfunction relativePath(url) {\n    urlParsingNode = urlParsingNode || document.createElement('a');\n    urlParsingNode.setAttribute('href', url);\n    const pathName = urlParsingNode.pathname;\n    return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n    return () => {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(() => {\n            const dom = ɵgetDOM();\n            const styles = document.querySelectorAll(`style[ng-transition=\"${transitionId}\"]`);\n            for (let i = 0; i < styles.length; i++) {\n                dom.remove(styles[i]);\n            }\n        });\n    };\n}\nconst SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT, Injector],\n        multi: true\n    },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BrowserGetTestability {\n    static init() {\n        setTestabilityGetter(new BrowserGetTestability());\n    }\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback /** TODO #9100 */) => {\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            let didWork = false;\n            const decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (ɵgetDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n}\nBrowserXhr.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserXhr, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nBrowserXhr.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserXhr });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserXhr, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(p => p.manager = this);\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     * @deprecated No longer being used in Ivy code. To be removed in version 14.\n     */\n    addGlobalEventListener(target, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        const plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            if (plugin.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin);\n                return plugin;\n            }\n        }\n        throw new Error(`No event manager plugin found for event ${eventName}`);\n    }\n}\nEventManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: EventManager, deps: [{ token: EVENT_MANAGER_PLUGINS }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nEventManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: EventManager });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: EventManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [EVENT_MANAGER_PLUGINS]\n                    }] }, { type: i0.NgZone }];\n    } });\nclass EventManagerPlugin {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    addGlobalEventListener(element, eventName, handler) {\n        const target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n        }\n        return this.addEventListener(target, eventName, handler);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SharedStylesHost {\n    constructor() {\n        /** @internal */\n        this._stylesSet = new Set();\n    }\n    addStyles(styles) {\n        const additions = new Set();\n        styles.forEach(style => {\n            if (!this._stylesSet.has(style)) {\n                this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    }\n    onStylesAdded(additions) { }\n    getAllStyles() {\n        return Array.from(this._stylesSet);\n    }\n}\nSharedStylesHost.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: SharedStylesHost, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nSharedStylesHost.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: SharedStylesHost });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: SharedStylesHost, decorators: [{\n            type: Injectable\n        }] });\nclass DomSharedStylesHost extends SharedStylesHost {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n        // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n        this._hostNodes = new Map();\n        this._hostNodes.set(_doc.head, []);\n    }\n    _addStylesToHost(styles, host, styleNodes) {\n        styles.forEach((style) => {\n            const styleEl = this._doc.createElement('style');\n            styleEl.textContent = style;\n            styleNodes.push(host.appendChild(styleEl));\n        });\n    }\n    addHost(hostNode) {\n        const styleNodes = [];\n        this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n        this._hostNodes.set(hostNode, styleNodes);\n    }\n    removeHost(hostNode) {\n        const styleNodes = this._hostNodes.get(hostNode);\n        if (styleNodes) {\n            styleNodes.forEach(removeStyle);\n        }\n        this._hostNodes.delete(hostNode);\n    }\n    onStylesAdded(additions) {\n        this._hostNodes.forEach((styleNodes, hostNode) => {\n            this._addStylesToHost(additions, hostNode, styleNodes);\n        });\n    }\n    ngOnDestroy() {\n        this._hostNodes.forEach(styleNodes => styleNodes.forEach(removeStyle));\n    }\n}\nDomSharedStylesHost.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomSharedStylesHost, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomSharedStylesHost.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomSharedStylesHost });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomSharedStylesHost, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\nfunction removeStyle(styleNode) {\n    ɵgetDOM().remove(styleNode);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n    for (let i = 0; i < styles.length; i++) {\n        let style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n    // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n    // the listener (see below).\n    return (event) => {\n        // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n        // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n        // can inspect the listener toString contents for the existence of this special token. Because\n        // the token is a string literal, it is ensured to not be modified by compiled code.\n        if (event === '__ngUnwrap__') {\n            return eventHandler;\n        }\n        const allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n        return undefined;\n    };\n}\nlet hasLoggedNativeEncapsulationWarning = false;\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                let renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                renderer.applyToHost(element);\n                return renderer;\n            }\n            // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n            // value that is not known (but previously was the value for ViewEncapsulation.Native)\n            case 1:\n            case ViewEncapsulation.ShadowDom:\n                // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n                if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n                    // enum value that is not known (but previously was the value for\n                    // ViewEncapsulation.Native)\n                    !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n                    hasLoggedNativeEncapsulationWarning = true;\n                    console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n                }\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    const styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    }\n    begin() { }\n    end() { }\n}\nDomRendererFactory2.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomRendererFactory2, deps: [{ token: EventManager }, { token: DomSharedStylesHost }, { token: APP_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nDomRendererFactory2.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomRendererFactory2 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomRendererFactory2, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: EventManager }, { type: DomSharedStylesHost }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [APP_ID]\n                    }] }];\n    } });\nclass DefaultDomRenderer2 {\n    constructor(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n        this.destroyNode = null;\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n            // will result in undefined, so we just return the namespace here.\n            return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return document.createElement(name);\n    }\n    createComment(value) {\n        return document.createComment(value);\n    }\n    createText(value) {\n        return document.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        parent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            parent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            // TODO(FW-811): Ivy may cause issues here because it's passing around\n            // full URIs for namespaces, therefore this lookup will fail.\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            // TODO(FW-811): Ivy may cause issues here because it's passing around\n            // full URIs for namespaces, therefore this lookup will fail.\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n                // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n                // which is wrong.\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n        }\n        return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n}\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(`Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n    }\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, appId) {\n        super(eventManager);\n        this.component = component;\n        const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n        this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    }\n    applyToHost(element) {\n        super.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component) {\n        super(eventManager);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = flattenStyles(component.id, component.styles, []);\n        for (let i = 0; i < styles.length; i++) {\n            const styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n}\nDomEventsPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomEventsPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomEventsPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst _keyMap = {\n    // The following values are here for cross-browser compatibility and to match the W3C standard\n    // cf https://www.w3.org/TR/DOM-Level-3-Events-key/\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst _chromeNumKeyPadMap = {\n    'A': '1',\n    'B': '2',\n    'C': '3',\n    'D': '4',\n    'E': '5',\n    'F': '6',\n    'G': '7',\n    'H': '8',\n    'I': '9',\n    'J': '*',\n    'K': '+',\n    'M': '-',\n    'N': '.',\n    'O': '/',\n    '\\x60': '0',\n    '\\x90': 'NumLock'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': (event) => event.altKey,\n    'control': (event) => event.ctrlKey,\n    'meta': (event) => event.metaKey,\n    'shift': (event) => event.shiftKey\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    static getEventFullKey(event) {\n        let fullKey = '';\n        let key = getEventKey(event);\n        key = key.toLowerCase();\n        if (key === ' ') {\n            key = 'space'; // for readability\n        }\n        else if (key === '.') {\n            key = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName != key) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    fullKey += modifierName + '.';\n                }\n            }\n        });\n        fullKey += key;\n        return fullKey;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event /** TODO #9100 */) => {\n            if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    }\n}\nKeyEventsPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KeyEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nKeyEventsPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KeyEventsPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: KeyEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\nfunction getEventKey(event) {\n    let key = event.key;\n    if (key == null) {\n        key = event.keyIdentifier;\n        // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n        // Safari cf\n        // https://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n        if (key == null) {\n            return 'Unidentified';\n        }\n        if (key.startsWith('U+')) {\n            key = String.fromCharCode(parseInt(key.substring(2), 16));\n            if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                // There is a bug in Chrome for numeric keypad keys:\n                // https://code.google.com/p/chromium/issues/detail?id=155654\n                // 1, 2, 3 ... are reported as A, B, C ...\n                key = _chromeNumKeyPadMap[key];\n            }\n        }\n    }\n    return _keyMap[key] || key;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    ɵsetDocument(document);\n    return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nconst BROWSER_MODULE_PROVIDERS = [\n    { provide: ɵINJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] },\n    {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost, APP_ID]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT] },\n    { provide: Testability, useClass: Testability, deps: [NgZone] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    { provide: XhrFactory, useClass: BrowserXhr, deps: [] },\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(parentModule) {\n        if (parentModule) {\n            throw new Error(`BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    }\n}\nBrowserModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserModule, deps: [{ token: BrowserModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\nBrowserModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserModule, exports: [CommonModule, ApplicationModule] });\nBrowserModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserModule, providers: BROWSER_MODULE_PROVIDERS, imports: [CommonModule, ApplicationModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserModule, decorators: [{\n            type: NgModule,\n            args: [{ providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule] }]\n        }], ctorParameters: function () {\n        return [{ type: BrowserModule, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [BrowserModule]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n    return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n}\nMeta.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: Meta, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nMeta.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: Meta, providedIn: 'root', useFactory: createMeta, deps: [] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: Meta, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv'\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n}\nTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: Title, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nTitle.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: Title, providedIn: 'root', useFactory: createTitle, deps: [] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: Title, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        const start = performanceNow();\n        let numTicks = 0;\n        while (numTicks < 5 || (performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\nfunction performanceNow() {\n    return win.performance && win.performance.now ? win.performance.now() :\n        new Date().getTime();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n    const escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\nfunction unescapeHtml(text) {\n    const unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n    return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\nclass TransferState {\n    constructor() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    /** @internal */\n    static init(initState) {\n        const transferState = new TransferState();\n        transferState.store = initState;\n        return transferState;\n    }\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    get(key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n    set(key, value) {\n        this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n    remove(key) {\n        delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n    hasKey(key) {\n        return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    onSerialize(key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    toJson() {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (const key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    }\n}\nTransferState.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TransferState, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTransferState.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TransferState });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TransferState, decorators: [{\n            type: Injectable\n        }] });\nfunction initTransferState(doc, appId) {\n    // Locate the script tag with the JSON data transferred from the server.\n    // The id of the script tag is set to the Angular appId + 'state'.\n    const script = doc.getElementById(appId + '-state');\n    let initialState = {};\n    if (script && script.textContent) {\n        try {\n            // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\nclass BrowserTransferStateModule {\n}\nBrowserTransferStateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserTransferStateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBrowserTransferStateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserTransferStateModule });\nBrowserTransferStateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserTransferStateModule, providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserTransferStateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID] }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (ɵgetDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n}\nHammerGestureConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: HammerGestureConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nHammerGestureConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: HammerGestureConfig });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: HammerGestureConfig, decorators: [{\n            type: Injectable\n        }] });\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n        this._loaderPromise = null;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || this.loader();\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            this._loaderPromise\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            });\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n}\nHammerGesturesPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: HammerGesturesPlugin, deps: [{ token: DOCUMENT }, { token: HAMMER_GESTURE_CONFIG }, { token: i0.ɵConsole }, { token: HAMMER_LOADER, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nHammerGesturesPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: HammerGesturesPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: HammerGesturesPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: HammerGestureConfig, decorators: [{\n                        type: Inject,\n                        args: [HAMMER_GESTURE_CONFIG]\n                    }] }, { type: i0.ɵConsole }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [HAMMER_LOADER]\n                    }] }];\n    } });\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {\n}\nHammerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: HammerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHammerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: HammerModule });\nHammerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: HammerModule, providers: [\n        {\n            provide: EVENT_MANAGER_PLUGINS,\n            useClass: HammerGesturesPlugin,\n            multi: true,\n            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n        },\n        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: HammerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: EVENT_MANAGER_PLUGINS,\n                            useClass: HammerGesturesPlugin,\n                            multi: true,\n                            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n                        },\n                        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n                    ]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n}\nDomSanitizer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomSanitizer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDomSanitizer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomSanitizer, providedIn: 'root', useExisting: i0.forwardRef(function () { return DomSanitizerImpl; }) });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomSanitizer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n        }] });\nfunction domSanitizerImplFactory(injector) {\n    return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* Html */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* Style */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* Script */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                const type = ɵgetSanitizationBypassType(value);\n                if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* Url */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* ResourceUrl */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n            default:\n                throw new Error(`Unexpected SecurityContext ${ctx} (see https://g.co/ng/security#xss)`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n}\nDomSanitizerImpl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomSanitizerImpl, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomSanitizerImpl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomSanitizerImpl, providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [{ token: Injector }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DomSanitizerImpl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('13.1.1');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };\n"]},"metadata":{},"sourceType":"module"}