{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\MM\\\\Downloads\\\\ng-certification-tndsvl\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\MM\\\\Downloads\\\\ng-certification-tndsvl\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { EMPTY, catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\"; // import { environment } from 'src/environments/env';\n\nexport var WeatherService = /*#__PURE__*/(function () {\n  var WeatherService = /*#__PURE__*/function () {\n    function WeatherService(http) {\n      _classCallCheck(this, WeatherService);\n\n      this.http = http;\n      this.baseWeatherURL = 'https://api.openweathermap.org/data/2.5/weather?zip=';\n      this.baseForecastURL = 'https://api.openweathermap.org/data/2.5/forecast?zip=';\n      this.urlSuffix = \"&APPID=5a4b2d457ecbef9eb2a71e480b947604\";\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n\n    _createClass(WeatherService, [{\n      key: \"loadWeatherByZipCode\",\n      value: function loadWeatherByZipCode(zipCode) {\n        if (zipCode > 0) {\n          return this.http.get(this.baseWeatherURL + zipCode + this.urlSuffix).pipe(catchError(function (err) {\n            if (err.status === 404) {\n              console.log(\"zip \".concat(zipCode, \" not found\"));\n              window.alert('Please enter the valid zipcode');\n              return EMPTY;\n            }\n          }));\n        }\n      }\n    }, {\n      key: \"loadWeatherForecast\",\n      value: function loadWeatherForecast(zipCode) {\n        if (zipCode > 0) {\n          return this.http.get(this.baseForecastURL + zipCode + this.urlSuffix).pipe(catchError(function (err) {\n            if (err.status === 404) {\n              console.log(\"zip \".concat(zipCode, \" not found\"));\n              window.alert('Please enter the valid zipcode');\n              return EMPTY;\n            }\n          }));\n        }\n      }\n    }]);\n\n    return WeatherService;\n  }();\n\n  WeatherService.ɵfac = function WeatherService_Factory(t) {\n    return new (t || WeatherService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  WeatherService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WeatherService,\n    factory: WeatherService.ɵfac,\n    providedIn: 'root'\n  });\n  return WeatherService;\n})();","map":{"version":3,"sources":["C:/Users/MM/Downloads/ng-certification-tndsvl/src/app/services/weather.service.ts"],"names":["HttpHeaders","EMPTY","catchError","i0","i1","WeatherService","http","baseWeatherURL","baseForecastURL","urlSuffix","httpOptions","headers","zipCode","get","pipe","err","status","console","log","window","alert","ɵfac","WeatherService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,MAAlC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB,C,CACA;;AACA,WAAaC,cAAb;AAAA,MAAaA,cAAb;AACI,4BAAYC,IAAZ,EAAkB;AAAA;;AACd,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKC,cAAL,GAAsB,sDAAtB;AACA,WAAKC,eAAL,GAAuB,uDAAvB;AACA,WAAKC,SAAL,GAAiB,yCAAjB;AACA,WAAKC,WAAL,GAAmB;AACfC,QAAAA,OAAO,EAAE,IAAIX,WAAJ,CAAgB;AACrB,0BAAgB;AADK,SAAhB;AADM,OAAnB;AAKH;;AAXL;AAAA;AAAA,aAYI,8BAAqBY,OAArB,EAA8B;AAC1B,YAAIA,OAAO,GAAG,CAAd,EAAiB;AACb,iBAAO,KAAKN,IAAL,CAAUO,GAAV,CAAc,KAAKN,cAAL,GAAsBK,OAAtB,GAAgC,KAAKH,SAAnD,EACFK,IADE,CACGZ,UAAU,CAAC,UAAAa,GAAG,EAAI;AACxB,gBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBC,cAAAA,OAAO,CAACC,GAAR,eAAmBN,OAAnB;AACAO,cAAAA,MAAM,CAACC,KAAP,CAAa,gCAAb;AACA,qBAAOnB,KAAP;AACH;AACJ,WANmB,CADb,CAAP;AAQH;AACJ;AAvBL;AAAA;AAAA,aAwBI,6BAAoBW,OAApB,EAA6B;AACzB,YAAIA,OAAO,GAAG,CAAd,EAAiB;AACb,iBAAO,KAAKN,IAAL,CAAUO,GAAV,CAAc,KAAKL,eAAL,GAAuBI,OAAvB,GAAiC,KAAKH,SAApD,EACFK,IADE,CACGZ,UAAU,CAAC,UAAAa,GAAG,EAAI;AACxB,gBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBC,cAAAA,OAAO,CAACC,GAAR,eAAmBN,OAAnB;AACAO,cAAAA,MAAM,CAACC,KAAP,CAAa,gCAAb;AACA,qBAAOnB,KAAP;AACH;AACJ,WANmB,CADb,CAAP;AAQH;AACJ;AAnCL;;AAAA;AAAA;;AAqCAI,EAAAA,cAAc,CAACgB,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,WAAO,KAAKA,CAAC,IAAIlB,cAAV,EAA0BF,EAAE,CAACqB,QAAH,CAAYpB,EAAE,CAACqB,UAAf,CAA1B,CAAP;AAA+D,GAA1H;;AACApB,EAAAA,cAAc,CAACqB,KAAf,GAAuB,aAAcvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,IAAAA,KAAK,EAAEvB,cAAT;AAAyBwB,IAAAA,OAAO,EAAExB,cAAc,CAACgB,IAAjD;AAAuDS,IAAAA,UAAU,EAAE;AAAnE,GAAtB,CAArC;AAtCA,SAAazB,cAAb;AAAA","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\r\nimport { EMPTY, catchError } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\n// import { environment } from 'src/environments/env';\r\nexport class WeatherService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.baseWeatherURL = 'https://api.openweathermap.org/data/2.5/weather?zip=';\r\n        this.baseForecastURL = 'https://api.openweathermap.org/data/2.5/forecast?zip=';\r\n        this.urlSuffix = \"&APPID=5a4b2d457ecbef9eb2a71e480b947604\";\r\n        this.httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n            }),\r\n        };\r\n    }\r\n    loadWeatherByZipCode(zipCode) {\r\n        if (zipCode > 0) {\r\n            return this.http.get(this.baseWeatherURL + zipCode + this.urlSuffix)\r\n                .pipe(catchError(err => {\r\n                if (err.status === 404) {\r\n                    console.log(`zip ${zipCode} not found`);\r\n                    window.alert('Please enter the valid zipcode');\r\n                    return EMPTY;\r\n                }\r\n            }));\r\n        }\r\n    }\r\n    loadWeatherForecast(zipCode) {\r\n        if (zipCode > 0) {\r\n            return this.http.get(this.baseForecastURL + zipCode + this.urlSuffix)\r\n                .pipe(catchError(err => {\r\n                if (err.status === 404) {\r\n                    console.log(`zip ${zipCode} not found`);\r\n                    window.alert('Please enter the valid zipcode');\r\n                    return EMPTY;\r\n                }\r\n            }));\r\n        }\r\n    }\r\n}\r\nWeatherService.ɵfac = function WeatherService_Factory(t) { return new (t || WeatherService)(i0.ɵɵinject(i1.HttpClient)); };\r\nWeatherService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: WeatherService, factory: WeatherService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}