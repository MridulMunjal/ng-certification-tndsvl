{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\MM\\\\Downloads\\\\ng-certification-tndsvl\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\MM\\\\Downloads\\\\ng-certification-tndsvl\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nexport var Observable = /*#__PURE__*/(function () {\n  var Observable = /*#__PURE__*/function () {\n    function Observable(subscribe) {\n      _classCallCheck(this, Observable);\n\n      if (subscribe) {\n        this._subscribe = subscribe;\n      }\n    }\n\n    _createClass(Observable, [{\n      key: \"lift\",\n      value: function lift(operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n      }\n    }, {\n      key: \"subscribe\",\n      value: function subscribe(observerOrNext, error, complete) {\n        var _this = this;\n\n        var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(function () {\n          var operator = _this.operator,\n              source = _this.source;\n          subscriber.add(operator ? operator.call(subscriber, source) : source ? _this._subscribe(subscriber) : _this._trySubscribe(subscriber));\n        });\n        return subscriber;\n      }\n    }, {\n      key: \"_trySubscribe\",\n      value: function _trySubscribe(sink) {\n        try {\n          return this._subscribe(sink);\n        } catch (err) {\n          sink.error(err);\n        }\n      }\n    }, {\n      key: \"forEach\",\n      value: function forEach(_next, promiseCtor) {\n        var _this2 = this;\n\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n          var subscriber = new SafeSubscriber({\n            next: function next(value) {\n              try {\n                _next(value);\n              } catch (err) {\n                reject(err);\n                subscriber.unsubscribe();\n              }\n            },\n            error: reject,\n            complete: resolve\n          });\n\n          _this2.subscribe(subscriber);\n        });\n      }\n    }, {\n      key: \"_subscribe\",\n      value: function _subscribe(subscriber) {\n        var _a;\n\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n      }\n    }, {\n      key: Symbol_observable,\n      value: function value() {\n        return this;\n      }\n    }, {\n      key: \"pipe\",\n      value: function pipe() {\n        for (var _len = arguments.length, operations = new Array(_len), _key = 0; _key < _len; _key++) {\n          operations[_key] = arguments[_key];\n        }\n\n        return pipeFromArray(operations)(this);\n      }\n    }, {\n      key: \"toPromise\",\n      value: function toPromise(promiseCtor) {\n        var _this3 = this;\n\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n          var value;\n\n          _this3.subscribe(function (x) {\n            return value = x;\n          }, function (err) {\n            return reject(err);\n          }, function () {\n            return resolve(value);\n          });\n        });\n      }\n    }]);\n\n    return Observable;\n  }();\n\n  Observable.create = function (subscribe) {\n    return new Observable(subscribe);\n  };\n\n  return Observable;\n})();\n\nfunction getPromiseCtor(promiseCtor) {\n  var _a;\n\n  return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\n\nfunction isObserver(value) {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber(value) {\n  return value && value instanceof Subscriber || isObserver(value) && isSubscription(value);\n}","map":{"version":3,"sources":["C:/Users/MM/Downloads/ng-certification-tndsvl/node_modules/rxjs/dist/esm/internal/Observable.js"],"names":["SafeSubscriber","Subscriber","isSubscription","observable","Symbol_observable","pipeFromArray","config","isFunction","errorContext","Observable","subscribe","_subscribe","operator","source","observerOrNext","error","complete","subscriber","isSubscriber","add","call","_trySubscribe","sink","err","next","promiseCtor","getPromiseCtor","resolve","reject","value","unsubscribe","_a","operations","x","create","Promise","isObserver"],"mappings":"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","sourcesContent":["import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nexport class Observable {\n    constructor(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    lift(operator) {\n        const observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    subscribe(observerOrNext, error, complete) {\n        const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(() => {\n            const { operator, source } = this;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        this._subscribe(subscriber)\n                    :\n                        this._trySubscribe(subscriber));\n        });\n        return subscriber;\n    }\n    _trySubscribe(sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    }\n    forEach(next, promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            const subscriber = new SafeSubscriber({\n                next: (value) => {\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscriber.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n            this.subscribe(subscriber);\n        });\n    }\n    _subscribe(subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    }\n    [Symbol_observable]() {\n        return this;\n    }\n    pipe(...operations) {\n        return pipeFromArray(operations)(this);\n    }\n    toPromise(promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let value;\n            this.subscribe((x) => (value = x), (err) => reject(err), () => resolve(value));\n        });\n    }\n}\nObservable.create = (subscribe) => {\n    return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n"]},"metadata":{},"sourceType":"module"}